{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\projetos\\\\podcastrnext\\\\src\\\\components\\\\Player\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from 'react';\nimport { usePlayer } from '../../contexts/PlayerContexts';\nimport styles from './styles-2..module.scss';\nimport Image from 'next/image';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      togglePlay = _usePlayer.togglePlay,\n      toggleLoop = _usePlayer.toggleLoop,\n      setPlayingState = _usePlayer.setPlayingState,\n      playNext = _usePlayer.playNext,\n      isLooping = _usePlayer.isLooping,\n      playPrevious = _usePlayer.playPrevious,\n      hasNext = _usePlayer.hasNext,\n      hasPrevious = _usePlayer.hasPrevious,\n      isShuffling = _usePlayer.isShuffling,\n      toggleShuffle = _usePlayer.toggleShuffle;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(audioRef.current.currentTime);\n    });\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContanier,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione umpodcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true,\n        loop: isLooping,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        },\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length == 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar proxima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"Ms3bQmCqgU1BmJIUkJE+RWYFo+g=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/projetos/podcastrnext/src/components/Player/index.tsx"],"names":["useRef","useEffect","useState","usePlayer","styles","Image","Slider","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","togglePlay","toggleLoop","setPlayingState","playNext","isLooping","playPrevious","hasNext","hasPrevious","isShuffling","toggleShuffle","current","play","pause","setupProgressListener","currentTime","addEventListener","episode","playerContanier","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","backgroundColor","borderColor","borderWidth","emptySlider","duration","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState } from 'react';\r\nimport { usePlayer } from '../../contexts/PlayerContexts';\r\nimport styles from './styles-2..module.scss';\r\nimport Image from 'next/image';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\n\r\nexport function Player() {\r\nconst audioRef = useRef<HTMLAudioElement>(null);\r\nconst [progress, setProgress] =useState(0);\r\n\r\nconst { \r\n    episodeList, \r\n    currentEpisodeIndex, \r\n    isPlaying, \r\n    togglePlay,\r\n    toggleLoop,\r\n    setPlayingState,\r\n    playNext,\r\n    isLooping,\r\n    playPrevious, \r\n    hasNext,\r\n    hasPrevious,\r\n    isShuffling,\r\n    toggleShuffle\r\n} = usePlayer();\r\n\r\nuseEffect (() => {\r\n    if (!audioRef.current){\r\n        return;\r\n    }\r\n    if (isPlaying){\r\n        audioRef.current.play();\r\n    }else {\r\n        audioRef.current.pause();\r\n    }\r\n}, [isPlaying])\r\n \r\nfunction setupProgressListener (){\r\n    audioRef.current.currentTime = 0;\r\n\r\n    audioRef.current.addEventListener('timeupdate', () => {\r\n       setProgress(audioRef.current.currentTime);\r\n    });\r\n}\r\n\r\nconst episode = episodeList[currentEpisodeIndex]\r\n\r\n    return (\r\n        <div className={styles.playerContanier}>\r\n           <header>\r\n               <img src=\"/playing.svg\" alt=\"Tocando agora\"/>\r\n               <strong>Tocando agora </strong>\r\n           </header>\r\n\r\n           { episode ? (\r\n               <div className={styles.currentEpisode}>\r\n                   <Image \r\n                   width={592}\r\n                   height={592}\r\n                   src={episode.thumbnail}\r\n                   objectFit=\"cover\"\r\n                   />\r\n                   <strong>{episode.title}</strong>\r\n                   <span>{episode.members}</span>\r\n               </div>\r\n           ) : (\r\n                <div className={styles.emptyPlayer}>\r\n                    <strong>Selecione umpodcast para ouvir</strong>\r\n                </div>\r\n           )}\r\n \r\n          \r\n          <footer className={!episode ? styles.empty: ''}>\r\n               <div className={styles.progress}>\r\n                   <span>{convertDurationToTimeString(progress)}</span>\r\n                   <div className={styles.slider}>\r\n                       { episode ? (\r\n                           <Slider \r\n                           trackStyle={{backgroundColor: '#04d361'}}\r\n                           railStyle={{ backgroundColor: '#9f75ff'}}\r\n                           handleStyle={{ borderColor: '#04d361', borderWidth: 4}}\r\n                           />\r\n                        ): (\r\n                           <div className={styles.emptySlider} />\r\n                       )}\r\n                   </div>\r\n                   <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\r\n               </div>\r\n\r\n               { episode && (\r\n                  <audio\r\n                  src={episode.url}\r\n                  ref={audioRef}\r\n                  autoPlay\r\n                  loop={isLooping}\r\n                  onPlay={() => setPlayingState(true)}\r\n                  onPause={() => setPlayingState(false)}\r\n                  onLoadedMetadata={setupProgressListener}\r\n                  />\r\n                )}\r\n               <div className={styles.buttons}>\r\n                   <button \r\n                   type=\"button\" \r\n                   disabled={!episode || episodeList.length == 1}\r\n                   onClick={toggleShuffle}\r\n                   className={isShuffling ? styles.isActive : ''}\r\n                   >\r\n                       <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\r\n                   </button>\r\n                   <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\r\n                       <img src=\"/play-previous.svg\" alt=\"Tocar anterior\"/>\r\n                   </button>\r\n                   <button \r\n                   type=\"button\" \r\n                   className={styles.playButton} \r\n                   disabled={!episode}\r\n                   onClick={togglePlay}\r\n                   >\r\n                       { isPlaying\r\n                          ? <img src=\"/pause.svg\" alt=\"Tocar\"/>\r\n                          :<img src=\"/play.svg\" alt=\"Tocar\"/>\r\n                        }\r\n                   </button>\r\n                   <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\r\n                       <img src=\"/play-next.svg\" alt=\"Tocar proxima\" />\r\n                   </button>\r\n                   <button \r\n                   type=\"button\" \r\n                   disabled={!episode}\r\n                   onClick={toggleLoop}\r\n                   className={isLooping ? styles.isActive : ''}\r\n                   >\r\n                       <img src=\"/repeat.svg\" alt=\"Repetir\"/>\r\n                   </button>\r\n               </div>\r\n           </footer>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}