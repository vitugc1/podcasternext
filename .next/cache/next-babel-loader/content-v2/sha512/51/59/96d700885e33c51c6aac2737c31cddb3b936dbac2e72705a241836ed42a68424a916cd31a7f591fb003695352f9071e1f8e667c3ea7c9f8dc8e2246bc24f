{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\projetos\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport styles from './episode.module.scss';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/arrow-left.svg\",\n          alt: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocas episodio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/projetos/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","styles","Episode","episode","thumbnailContainer","title","members","publishedAt","durationAsString","description","__html","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","thumbnail","published_at","locale","duration","Number","file","url","props","revalidate"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR'\r\nimport Image from 'next/image';\r\nimport { GetStaticProps, GetStaticPaths }from 'next';\r\nimport { api } from '../../services/api';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nimport styles from './episode.module.scss'\r\n\r\ntype Episode = {\r\n    id: string;\r\n    title: string;\r\n    thumbnail: string;\r\n    description: string;\r\n    members: string;\r\n    duartion: number;\r\n    durationAsString: string;\r\n    url: string;\r\n    publishedAt: string;\r\n    \r\n}\r\n\r\n\r\ntype EpisodeProps = {\r\n    episode: Episode;\r\n}\r\n\r\nexport default function Episode({ episode }: EpisodeProps ) {\r\n    return (\r\n        <div className={styles.episode}>\r\n            <div className={styles.thumbnailContainer}>\r\n                <button type=\"button\">\r\n                    <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\r\n                </button>\r\n                \r\n                <button type=\"button\">\r\n                    <img src=\"/play.svg\" alt=\"Tocas episodio\"/>\r\n                </button>\r\n            </div>\r\n\r\n            <header>\r\n                <h1>{episode.title}</h1>\r\n                <span>{episode.members}</span>\r\n                <span>{episode.publishedAt}</span>\r\n                <span>{episode.durationAsString}</span>\r\n            </header>\r\n\r\n            <div className={styles.description} \r\n            dangerouslySetInnerHTML = {{__html: episode.description}}/>\r\n        </div>\r\n    )\r\n} \r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n   return {\r\n       paths: [],\r\n       fallback: 'blocking'\r\n   }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n    const { slug } = ctx.params;\r\n    \r\n    const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n    const episode = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR}),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        description: data.description,\r\n        url: data.file.url,\r\n      };\r\n    \r\n    return {\r\n        props: {},\r\n        revalidate: 60 * 60 * 24, // 24 hours\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}