{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\projetos\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport styles from './episode.module.scss';\nimport { usePlayer } from '../../contexts/PlayerContexts';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 720,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocas episodio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Episode, \"mptMREsNBTdRfLLVAN69g5qilFU=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/projetos/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["Image","Link","styles","usePlayer","Episode","episode","play","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html"],"mappings":";;;;;AAGA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAKA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,SAAT,QAA0B,+BAA1B;;AAoBA,eAAe,SAASC,OAAT,OAA6C;AAAA;;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;;AAAA,mBAC3CF,SAAS,EADkC;AAAA,MACpDG,IADoD,cACpDA,IADoD;;AAGzD,sBACK;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACG,OAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACK,kBAAvB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,iCACI;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,KAAD;AACA,QAAA,KAAK,EAAE,GADP;AAEA,QAAA,MAAM,EAAE,GAFR;AAGA,QAAA,GAAG,EAAEF,OAAO,CAACG,SAHb;AAIA,QAAA,SAAS,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cAPJ,eAcI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMF,IAAI,CAACD,OAAD,CAAV;AAAA,SAA/B;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBI;AAAA,8BACI;AAAA,kBAAKA,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAOL,OAAO,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAON,OAAO,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eA2BI;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,WAAvB;AACA,MAAA,uBAAuB,EAAI;AAACC,QAAAA,MAAM,EAAET,OAAO,CAACQ;AAAjB;AAD3B;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAgCF;;GAnCuBT,O;UACPD,S;;;KADOC,O","sourcesContent":["\r\nimport { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR'\r\nimport Image from 'next/image';\r\nimport Link from 'next/link';\r\nimport { GetStaticProps, GetStaticPaths } from 'next';\r\nimport { api } from '../../services/api';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nimport styles from './episode.module.scss'\r\nimport { usePlayer } from '../../contexts/PlayerContexts';\r\n\r\ntype Episode = {\r\n    id: string;\r\n    title: string;\r\n    thumbnail: string;\r\n    description: string;\r\n    members: string;\r\n    duartion: number;\r\n    durationAsString: string;\r\n    url: string;\r\n    publishedAt: string;\r\n    \r\n}\r\n\r\n\r\ntype EpisodeProps = {\r\n    episode: Episode;\r\n}\r\n\r\nexport default function Episode({ episode }: EpisodeProps ) {\r\nconst { play } = usePlayer();\r\n\r\n   return (\r\n        <div className={styles.episode}>\r\n            <div className={styles.thumbnailContainer}>\r\n                <Link href=\"/\">\r\n                <button type=\"button\">\r\n                    <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\r\n                </button>\r\n                </Link>\r\n\r\n                <Image\r\n                width={720}\r\n                height={160}\r\n                src={episode.thumbnail}\r\n                objectFit=\"cover\"\r\n                />\r\n                \r\n                <button type=\"button\" onClick={() => play(episode)}>\r\n                    <img src=\"/play.svg\" alt=\"Tocas episodio\"/>\r\n                </button>\r\n            </div>\r\n\r\n            <header>\r\n                <h1>{episode.title}</h1>\r\n                <span>{episode.members}</span>\r\n                <span>{episode.publishedAt}</span>\r\n                <span>{episode.durationAsString}</span>\r\n            </header>\r\n              \r\n            <div className={styles.description} \r\n            dangerouslySetInnerHTML = {{__html: episode.description}}/>\r\n        </div>\r\n    )\r\n} \r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n    const { data } = await api.get('episodes', {\r\n        params: {\r\n         _limit: 2,\r\n         _sort: 'published_at',\r\n         _order: 'desc'\r\n        }\r\n      })\r\n\r\n      const paths = data.map(episode => {\r\n          return {\r\n              params: {\r\n                  slug: episode.id \r\n              }\r\n          }\r\n      })\r\n   \r\n    return {\r\n       paths: [],\r\n       fallback: 'blocking'\r\n   }\r\n\r\n   // incremental static regeneration\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n    const { slug } = ctx.params;\r\n    \r\n    const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n    const episode = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR}),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        description: data.description,\r\n        url: data.file.url,\r\n      };\r\n    \r\n    return {\r\n        props: {\r\n            episode,\r\n        },\r\n        revalidate: 60 * 60 * 24, // 24 hours\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}