{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\projetos\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["C:/Users/Gabriel/Desktop/projetos/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["Episode","episode","title"],"mappings":";;;AAwBA,eAAe,SAASA,OAAT,OAA4C;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AACvD,sBACI;AAAA,cAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;KAJuBF,O","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR'\r\nimport { GetStaticProps, GetStaticPaths }from 'next';\r\nimport { api } from '../../services/api';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\ntype Episode = {\r\n    id: string;\r\n    title: string;\r\n    thumbnail: string;\r\n    description: string;\r\n    members: string;\r\n    duartion: number;\r\n    durationAsString: string;\r\n    url: string;\r\n    publishedAt: string;\r\n    \r\n}\r\n\r\n\r\ntype EpisodeProps = {\r\n    episode: Episode;\r\n}\r\nexport default function Episode({ episode}: EpisodeProps ) {\r\n    return (\r\n        <h1>{episode.title}</h1>\r\n    )\r\n} \r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n   return {\r\n       paths: [],\r\n       fallback: 'blocking'\r\n   }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n    const { slug } = ctx.params;\r\n    \r\n    const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n    const episode = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR}),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        description: data.description,\r\n        url: data.file.url,\r\n      };\r\n    \r\n    return {\r\n        props: {},\r\n        revalidate: 60 * 60 * 24, // 24 hours\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}